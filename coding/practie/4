  
const express = require('express')
const app = express()
const {open} = require('sqlite')
app.use(express.json())
const path = require('path')
const sqlite3 = require('sqlite3')
const dbPath = path.join(__dirname, 'cricketTeam.db')
let db = null
const intializeDBAndServer = async () => {
  try {
    db = await open({
      filename: dbPath,
      driver: sqlite3.Database,
    })
    app.listen(3000, () => {
      console.log('Server Running at http://localhost:3000/')
    })
  } catch (e) {
    console.log(`DB Error:${e.message}`)
    process.exit(1)
  }
}
intializeDBAndServer()
//app get method
const convertObjectToResponseObject = dbObject => {
  return {
    palyerId: dbObject.palyerId,
    playerName: dbObject.playerName,
    jerseyNumber: dbObject.jerseyNumber,
    role: dbObject.role,
  }
}

app.get('/players/', async (request, response) => {
  const getPlayers = `
  SELECT * FROM cricket_team`
  const playersArray = await db.all(getPlayers)
  response.send(
    playersArray.map(each_player => convertObjectToResponseObject(each_player)),
  )
})

app.get('/players/:playerId/', async (request, response) => {
  const {playerId} = request.params
  const getPlayQuery = `SELECT *FROM cricket_team
  WHERE
  player_id=${playerId}`
  const playe = await db.get(getPlayQuery)
  response.send(convertObjectToResponseObject(player))
})

app.post('/players/', async (request, response) => {
  const playerDetails = request.body
  const {playerName, jerseyNumber, role} = playerDetails
  const postPlayQuery = `INSERT INTO 
    cricket_team (playerName,jerseyNumber,role)
    VALUES
    (${playerName}, ${jerseyNumber} ,${role});`
  const player = await db.run(postPlayQuery)
  response.send('Player Added to Team')
})
app.put('/players/:playersId/', async (request, response) => {
  const {playerName, jerseyNumber, role} = request.body
  const {playerId} = request.params
  const putPlayQuery = `
    UPDATE cricket_team
    SET playerName=${playerName},
    jerseyNumber=${jerseyNumber},
    role=${role}
    WHERE playerId=${playerId};`
  await db.run(putPlayQuery)
  response.send('player Details Updated')
})
app.delete('/players/:playerId', async (request, response) => {
  const {playerId} = request.params
  const deleteQuery = `DELETE FROM cricket_team 
    WHERE playerId=${playerId}`
  await db.run(deleteQuery)
  response.send('Player Removed')
})

module.exports = app

GET http://localhost:3000/players/

[
  {
    playerId: 1,
    playerName: "Lakshman",
    jerseyNumber: 5,
    role: "All-rounder"
  },

  ...
]
GET http://localhost:3000/players/1/
{
  playerId: 1,
  playerName: "Lakshman",
  jerseyNumber: 5,
  role: "All-rounder"
}
 
 POST http://localhost:3000/players/
 Content-Type:application/json;

 {
  "playerName": "Vishal",
  "jerseyNumber": 17,
  "role": "Bowler"
}




 PUT http://localhost:3000/players/:playersId/

 {
  "playerName": "Maneesh",
  "jerseyNumber": 54,
  "role": "All-rounder"
}


 DELETE http://localhost:3000/players/:playerId
 




